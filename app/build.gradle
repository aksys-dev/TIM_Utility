buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

def buildTime = getDate()

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "it.telecomitalia.TIMgamepad2"
        minSdkVersion 24
        targetSdkVersion 26
        versionCode 26
        versionName "0.11.17"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField 'boolean', 'ANDROID_7_SUPPORT_IMU', 'true'
        buildConfigField 'boolean', 'TEST_A7_ON_A8', 'false'
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
        buildConfigField "String", "CONFIG_FILE_NAME", "\"CONFIG\""
        buildConfigField "String", "KEY_SENSITIVE", "\"sensitivity\""
        buildConfigField "String", "KEY_CALIBRATION", "\"calibration\""

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                if (variant.buildType.name == ('release')) {
                    variant.outputs.all {
                        outputFileName = "Gamepad_Utility-release-v${defaultConfig.versionName}.apk"
                    }
                } else if (variant.buildType.name.equals('debug')) {
                    variant.outputs.all { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.apk')) {
                            def fileName = "Gamepad_Utility-v${defaultConfig.versionName}.apk"
                            outputFileName = fileName
                        }
                    }
                }
            }
        }
    }
}

static String getDate() {
    Date date = new Date();
    return date.format("dd/MM/yyyy", TimeZone.getTimeZone("UTC"))
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:recommendation:26.1.0'
    testImplementation 'junit:junit:4.12'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'ru.bartwell:exfilepicker:2.1'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.4'
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true
    }
}